module @"/Users/60b36t/Desktop/CIR-Samples/sampleCPrgms/matmul_decompose.cc" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "arm64-apple-macosx15.0.0", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<sync>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "o", "dlti.stack_alignment" = 128 : i64>} {
  func.func @_Z9CPU_Task1v() {
    %alloca = memref.alloca() {alignment = 4 : i64} : memref<i32> loc(#loc14)
    %alloca_0 = memref.alloca() {alignment = 4 : i64} : memref<i32> loc(#loc15)
    %c7_i32 = arith.constant 7 : i32 loc(#loc4)
    memref.store %c7_i32, %alloca[] : memref<i32> loc(#loc14)
    %c4_i32 = arith.constant 4 : i32 loc(#loc6)
    memref.store %c4_i32, %alloca_0[] : memref<i32> loc(#loc15)
    return loc(#loc2)
  } loc(#loc13)
  func.func @_Z9GPU_Task2v() {
    %alloca = memref.alloca() {alignment = 4 : i64} : memref<i32> loc(#loc17)
    %alloca_0 = memref.alloca() {alignment = 4 : i64} : memref<i32> loc(#loc18)
    %c7_i32 = arith.constant 7 : i32 loc(#loc10)
    memref.store %c7_i32, %alloca[] : memref<i32> loc(#loc17)
    %c4_i32 = arith.constant 4 : i32 loc(#loc12)
    memref.store %c4_i32, %alloca_0[] : memref<i32> loc(#loc18)
    return loc(#loc8)
  } loc(#loc16)
} loc(#loc)
#loc = loc("/Users/60b36t/Desktop/CIR-Samples/sampleCPrgms/matmul_decompose.cc":0:0)
#loc1 = loc("sampleCPrgms/matmul_decompose.cc":1:1)
#loc2 = loc("sampleCPrgms/matmul_decompose.cc":5:1)
#loc3 = loc("sampleCPrgms/matmul_decompose.cc":3:5)
#loc4 = loc("sampleCPrgms/matmul_decompose.cc":3:11)
#loc5 = loc("sampleCPrgms/matmul_decompose.cc":4:5)
#loc6 = loc("sampleCPrgms/matmul_decompose.cc":4:11)
#loc7 = loc("sampleCPrgms/matmul_decompose.cc":7:1)
#loc8 = loc("sampleCPrgms/matmul_decompose.cc":11:1)
#loc9 = loc("sampleCPrgms/matmul_decompose.cc":9:5)
#loc10 = loc("sampleCPrgms/matmul_decompose.cc":9:11)
#loc11 = loc("sampleCPrgms/matmul_decompose.cc":10:5)
#loc12 = loc("sampleCPrgms/matmul_decompose.cc":10:11)
#loc13 = loc(fused[#loc1, #loc2])
#loc14 = loc(fused[#loc3, #loc4])
#loc15 = loc(fused[#loc5, #loc6])
#loc16 = loc(fused[#loc7, #loc8])
#loc17 = loc(fused[#loc9, #loc10])
#loc18 = loc(fused[#loc11, #loc12])
